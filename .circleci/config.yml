version: 2.1

orbs:
  python: circleci/python@1.5.0

workflows:
  standard:
    jobs:
      - build-and-test-3-08
      - build-and-test-3-09
      - build-and-test-3-10
      - build-and-test-3-11
      - build-and-test-pypy3
      - lint

jobs:
  build-and-test-3-08: &test-template
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - run:
          name: Initialize submodules
          command: |-
              git submodule update --init
              mkdir -p logs
              touch env_personal.sh
      - run:
          name: Run build script
          command: make build
      - run:
          name: Run tests
          command: make test LINT=false MYPY=false
      - run:
          name: Upload coverage report
          command: make upload_coverage
      - store_artifacts:
          path: ./dist/

  build-and-test-3-09:
    <<: *test-template
    docker:
      - image: cimg/python:3.9

  build-and-test-3-10:
    <<: *test-template
    docker:
      - image: cimg/python:3.10

  build-and-test-3-11:
    <<: *test-template
    docker:
      - image: cimg/python:3.11

  build-and-test-pypy3:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Fetch PyPy
          command: |-
              wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ./miniconda.sh
              bash ./miniconda.sh -b -p ./miniconda
              source ./miniconda/bin/activate
              conda config --set channel_priority strict
              conda create -c conda-forge -n pypy pypy
              conda activate pypy
      - run:
          name: Initialize submodules
          command: |-
              git submodule update --init
              mkdir -p logs
              touch env_personal.sh
      - run:
          name: Run build script
          command: |-
              source ./miniconda/bin/activate
              conda activate pypy
              ls ./miniconda/bin
              make build PY=python
      - run:
          name: Run tests
          command: |-
              source ./miniconda/bin/activate
              conda activate pypy
              make test LINT=false MYPY=false PY=python
      - run:
          name: Upload coverage report
          command: |-
              source ./miniconda/bin/activate
              conda activate pypy
              make upload_coverage
      - store_artifacts:
          path: ./dist/
  lint:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Initialize submodules
          command: |-
              git submodule update --init
              mkdir -p logs
              touch env_personal.sh
      - run:
          name: Run linter / type checking
          command: make test LINT=only
